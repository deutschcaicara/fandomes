# ===========================================================
# Arquivo: utils/questionario_pos_pagamento.py
# ===========================================================
import asyncio
# Ajuste o import se mensageria.py estiver em um diret√≥rio diferente
from .mensageria import enviar_mensagem
import logging

# Configura√ß√£o b√°sica de logging
# logging.basicConfig(level=logging.INFO, format='%(asctime)s - %(levelname)s - %(message)s')

# --- Defini√ß√£o das Perguntas ---

# Perguntas Fatuais (Originais ou Adaptadas)
PERGUNTAS_FACTUAIS = [
    "Vamos come√ßar com algumas perguntas r√°pidas para ajudar nosso m√©dico a entender melhor. Qual o nome completo da pessoa que ser√° avaliada?",
    "Qual a idade aproximada dela?",
    "Qual o seu grau de parentesco com essa pessoa (voc√™ √© filho(a), esposa(o), irm√£o(√£), amigo(a), ou a pr√≥pria pessoa)?",
    "Quais s√£o as principais subst√¢ncias que ela est√° usando atualmente (por exemplo: √°lcool, coca√≠na, crack, maconha, medicamentos controlados sem prescri√ß√£o)?",
    "H√° quanto tempo, aproximadamente, esse uso se tornou um problema ou se intensificou?",
    "A pessoa j√° passou por algum tipo de tratamento para depend√™ncia qu√≠mica antes? Se sim, qual(is) e quando?",
    "Al√©m da depend√™ncia, existe alguma outra condi√ß√£o de sa√∫de importante, f√≠sica ou mental (como diabetes, press√£o alta, depress√£o, ansiedade, esquizofrenia), que devemos saber?",
    "Em qual cidade e estado a pessoa se encontra neste momento?"
]

# Perguntas Emocionais (Adicionadas para a Trilha Emocional)
PERGUNTAS_EMOCIONAIS = [
    "Pensando na situa√ß√£o atual, quais s√£o as maiores preocupa√ß√µes ou medos que voc√™ (ou a pessoa a ser avaliada, se n√£o for voc√™) tem enfrentado recentemente?",
    "Olhando para frente, o que voc√™ (ou a pessoa) mais deseja ou espera alcan√ßar ao buscar ajuda ou iniciar um tratamento?",
    "Em rela√ß√£o aos sentimentos, existe algum que tem sido muito presente ultimamente por causa dessa situa√ß√£o (por exemplo: culpa, vergonha, raiva, medo, frustra√ß√£o, tristeza, mas tamb√©m esperan√ßa ou al√≠vio)?",
    "De que forma voc√™ percebe que essa situa√ß√£o tem impactado o dia a dia, o trabalho/estudos e os relacionamentos familiares?"
]

# Combina as perguntas na ordem desejada para o question√°rio completo
# Pode ajustar a ordem se preferir intercalar fatuais e emocionais
QUESTIONARIO_COMPLETO_POS_PAGAMENTO = PERGUNTAS_FACTUAIS + PERGUNTAS_EMOCIONAIS

# --- Fun√ß√£o para Iniciar o Question√°rio ---

async def iniciar_questionario_pos_pagamento(telefone: str):
    """
    Envia a primeira pergunta do question√°rio p√≥s-pagamento.
    A l√≥gica de salvar o question√°rio no contexto e enviar as perguntas
    subsequentes √© gerenciada por nlp.py.
    """
    total_perguntas = len(QUESTIONARIO_COMPLETO_POS_PAGAMENTO)
    logging.info(f"QUESTIONARIO: üìã Preparando para iniciar ({total_perguntas} perguntas) para {telefone}")

    # Verifica se a lista de perguntas n√£o est√° vazia
    if QUESTIONARIO_COMPLETO_POS_PAGAMENTO:
        # Pega a primeira pergunta da lista combinada
        primeira_pergunta = QUESTIONARIO_COMPLETO_POS_PAGAMENTO[0]
        try:
            # Envia a primeira pergunta para o usu√°rio
            await enviar_mensagem(telefone, primeira_pergunta)
            logging.info(f"QUESTIONARIO: Enviada primeira pergunta para {telefone}.")
            # A continua√ß√£o do fluxo (salvar contexto, enviar pr√≥ximas perguntas)
            # ser√° tratada em nlp.py quando a resposta do usu√°rio chegar.
        except Exception as e:
            logging.error(f"QUESTIONARIO: ‚ùå Erro ao enviar a primeira pergunta para {telefone}: {e}")
            # Considerar o que fazer neste caso: tentar novamente? Notificar? Mudar estado?
    else:
        # Loga um aviso se a lista de perguntas estiver vazia
        logging.warning(f"QUESTIONARIO: ‚ö†Ô∏è Nenhuma pergunta definida. Question√°rio n√£o iniciado para {telefone}.")

